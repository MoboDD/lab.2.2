//RootX.cpp 
#include "Header.h"
//Функции, вычисляющие корень уравнения 
// Функция  - левая часть заданного уравнения
double Funct(double x)
{
	return x - (0.5) * (sin(x) * sin(x) - 1);
}

// Функция решения задачи поиска корня уравнения
double Root(double x0, double Eps, int Imax, double& y, ListBox^ Lb)
{
	double a;							// Предыдущее приближение к корню
	int i = 0;							// Счетчик числа итераций
	double x = x0; // Начальное приближение
	do
	{
		a = x;							// Запоминаем предыдущее приближение
		x = (0.5) * (sin(a) * sin(a) - 1);		// Вычисляем очередное приближение по заданной итерационной формуле
		i++;							// Плюс 1 в счетчик числа итераций
		y = Funct(x);					// Вычисляем значение функции в точке очередного приближения
		String^ fs = String::Format("    {0,2:D2}{1,15:F9}{2,15:F9}", i, x, y);		// Формирование строки
		Lb->Items->Add(fs);				// Вывод строки с i, x, y
	} 
	while (abs(x - a) >= Eps && i < Imax);	// Пока не достигнута заданная точность и число итераций < Imax
	return x;							// Возврат найденного приближенного значения корня
}